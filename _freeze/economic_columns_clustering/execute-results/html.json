{
  "hash": "23a835e023c1f819e82962dc15911fbb",
  "result": {
    "markdown": "---\ntitle: \"Clustering analysis을 중심으로\"\nauthor: \"sorrychoe\"\nformat: \n  html: \n    smooth-scroll: true\neditor: visual\nexecute: \n  echo: true\n  eval: true\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport BigKindsParser as bkp\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.rcParams[\"font.family\"] = \"Malgun Gothic\"\nplt.rcParams['figure.figsize'] = 10,10\nsns.set(font=\"Malgun Gothic\", rc={\"axes.unicode_minus\":False}, style='white')\ndf = pd.read_excel('./data/econo_columns_20170510-20220509.xlsx', engine = \"openpyxl\")\n```\n:::\n\n\n## 개요\n본 내용은 칼럼 데이터에 문서 군집 분석 진행한 보고서이다.\n\n분석 언어는 Python을 사용했으며, 가장 보편적인 군집 분석 방법인 K-Means Clusteringdmf 사용했다. \n알고리즘은 Scikit-Learn의 KMeans() 함수를 활용하여 분석을 진행했다.\n\n군집 분석에 앞서 EDA를 먼저 진행하였다.\n\n## EDA \n\n먼저 언론사 별 칼럼 보도 빈도를 확인하였다. 빈도 분석은 필자가 직접 제작한 라이브러리 'BigKindsParser'의 press_counter 함수를 활용했다.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndf_key = bkp.press_counter(df)\n\nsns.barplot(data = df_key, x = '기사', y = '언론사')\n\nplt.figure(facecolor = 'white')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-3-output-1.png){width=885 height=807}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 960x960 with 0 Axes>\n```\n:::\n:::\n\n\n<!-- ## 이상치 확인\noutlier = df[df['언론사'] == '아시아경제'] ##아시아 경제 기사 추가 크롤링 필요\noutlier['일자'] #아시아경제 기사는 2021년부터 빅카인즈에 기사를 업로드 2017~2020년 기사는 별도 크롤링 필요\n-->\n\n\n## 키워드 빈도\n\n언론사 빈도 분석에 이어 단어 빈도 분석을 진행하였다.\n시각화는 워드클라우드로 진행하였으며, 분석 알고리즘은 BigKindsParser를 통해 진행했다.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nkeywords = bkp.keywords_list(df)\nnews_key = bkp.keyword_parser(keywords)\nnews_key = bkp.duplication_remover(news_key)\nkey = bkp.word_counter(news_key)\nnews_key = bkp.counter_to_DataFrame(key)\n\nwc = WordCloud(font_path='malgun',\n    width = 500,\n    height = 500,\n    background_color='white').generate_from_frequencies(news_key.set_index('단어').to_dict()[\"빈도\"])\n\n\nplt.figure(figsize = (10, 10))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-4-output-1.png){width=758 height=758}\n:::\n:::\n\n\n## 언론사 별 키워드 분석\n\n더 자세한 분석을 위해 언론사 별로 나눈 키워드 분석도 진행했다.\n\n### 언론사별 키워드 분석 --> 한경\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nbkp.keywords_wordcloud(df, '한국경제')\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-5-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 언론사별 키워드 분석 --> 매경\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nbkp.keywords_wordcloud(df, '매일경제')\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-6-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 언론사별 키워드 분석 --> 서경\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nbkp.keywords_wordcloud(df, '서울경제')\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-7-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 언론사별 키워드 분석 --> 파이낸셜\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nbkp.keywords_wordcloud(df, '파이낸셜뉴스')\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-8-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 언론사별 키워드 분석 --> 헤럴드\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nbkp.keywords_wordcloud(df, '헤럴드경제')\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-9-output-1.png){width=758 height=758}\n:::\n:::\n\n\n## TF-IDF 분석\n\n언론사별 용어 빈도는 비슷하게 나온다는 점에서, 주류 단어가 아닌 언론사마다 특징적으로 사용한 단어를 추출하기 위해 상대 빈도 분석을 진행하였다.\n\n상대 빈도 분석 방법은 tf-idf으로 진행하였다.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nfrom sklearn.feature_extraction.text import TfidfVectorizer \n```\n:::\n\n\n### 언론사별 상대 빈도 분석 --> 한경\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nhan_words = df[df['언론사'] == '한국경제']\nhan_words = han_words['키워드']\n\ntfidf = TfidfVectorizer()\ntdm = tfidf.fit_transform(han_words)\n\nword_count1 = pd.DataFrame({\n    '단어': tfidf.get_feature_names_out(),\n    '빈도': tdm.sum(axis=0).flat\n}).sort_values('빈도', ascending = False).reset_index(drop = True)\n\nwc = WordCloud(font_path = 'malgun',\n    width = 500,\n    height = 500,\n    background_color='white').generate_from_frequencies(word_count1.set_index('단어').to_dict()[\"빈도\"])\n\n\nplt.figure(figsize = (10, 10))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-11-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 언론사별 상대 빈도 분석 --> 매경\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nmail_words = df[df['언론사'] == '매일경제']\nmail_words = mail_words['키워드']\n\ntfidf = TfidfVectorizer()\ntdm = tfidf.fit_transform(mail_words)\n\nword_count2 = pd.DataFrame({\n    '단어': tfidf.get_feature_names_out(),\n    '빈도': tdm.sum(axis=0).flat\n}).sort_values('빈도', ascending = False).reset_index(drop = True)\n\nwc = WordCloud(font_path = 'malgun',\n    width = 500,\n    height = 500,\n    background_color='white').generate_from_frequencies(word_count2.set_index('단어').to_dict()[\"빈도\"])\n\nplt.figure(figsize = (10, 10))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-12-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 언론사별 상대 빈도 분석 --> 서경\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nseo_words = df[df['언론사'] == '서울경제']\nseo_words = seo_words['키워드']\n\ntfidf = TfidfVectorizer()\ntdm = tfidf.fit_transform(seo_words)\n\nword_count3 = pd.DataFrame({\n    '단어': tfidf.get_feature_names_out(),\n    '빈도': tdm.sum(axis=0).flat\n}).sort_values('빈도', ascending = False).reset_index(drop = True)\n\nwc = WordCloud(font_path = 'malgun',\n    width = 500,\n    height = 500,\n    background_color='white').generate_from_frequencies(word_count3.set_index('단어').to_dict()[\"빈도\"])\n\nplt.figure(figsize = (10, 10))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-13-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 언론사별 상대 빈도 분석 --> 파이낸셜\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nfin_words = df[df['언론사'] == '파이낸셜뉴스']\nfin_words = fin_words['키워드']\n\ntfidf = TfidfVectorizer()\ntdm = tfidf.fit_transform(fin_words)\n\nword_count4 = pd.DataFrame({\n    '단어': tfidf.get_feature_names_out(),\n    '빈도': tdm.sum(axis=0).flat\n}).sort_values('빈도', ascending = False).reset_index(drop = True)\n\nwc = WordCloud(font_path = 'malgun',\n    width = 500,\n    height = 500,\n    background_color='white').generate_from_frequencies(word_count4.set_index('단어').to_dict()[\"빈도\"])\n\nplt.figure(figsize = (10, 10))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-14-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 언론사별 상대 빈도 분석 --> 헤럴드\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nhero_words = df[df['언론사'] == '헤럴드경제']\nhero_words = hero_words['키워드']\n\ntfidf = TfidfVectorizer()\ntdm = tfidf.fit_transform(hero_words)\n\nword_count5 = pd.DataFrame({\n    '단어': tfidf.get_feature_names_out(),\n    '빈도': tdm.sum(axis=0).flat\n}).sort_values('빈도', ascending = False).reset_index(drop = True)\n\nwc = WordCloud(font_path = 'malgun',\n    width = 500,\n    height = 500,\n    background_color='white').generate_from_frequencies(word_count5.set_index('단어').to_dict()[\"빈도\"])\n\nplt.figure(figsize = (10, 10))\nplt.imshow(wc)\nplt.axis('off')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-15-output-1.png){width=758 height=758}\n:::\n:::\n\n\n### 상대 빈도 별 순위 시각화\n\n각 언론사 별 상대 빈도 순위를 비교한 값은 다음과 같다.\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nwords_df1 = pd.concat([word_count1, word_count2], join='outer', axis=1)\nwords_df1.columns = ['단어(한경)', '빈도(한경)', '단어(매경)', '빈도(매경)']\nwords_df2 = pd.concat([word_count3, word_count4, word_count5], join='outer', axis=1)\nwords_df2.columns = ['단어(서경)', '빈도(서경)','단어(파이낸셜)', '빈도(파이낸셜)','단어(헤럴드)', '빈도(헤럴드)']\n\nwords_df = pd.concat([words_df1, words_df2], join = 'outer', axis = 1)\n\nwords_df.head(20)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>단어(한경)</th>\n      <th>빈도(한경)</th>\n      <th>단어(매경)</th>\n      <th>빈도(매경)</th>\n      <th>단어(서경)</th>\n      <th>빈도(서경)</th>\n      <th>단어(파이낸셜)</th>\n      <th>빈도(파이낸셜)</th>\n      <th>단어(헤럴드)</th>\n      <th>빈도(헤럴드)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>정부</td>\n      <td>170.874039</td>\n      <td>정부</td>\n      <td>127.335164</td>\n      <td>정부</td>\n      <td>207.973736</td>\n      <td>정부</td>\n      <td>96.774121</td>\n      <td>정부</td>\n      <td>68.249231</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>기업</td>\n      <td>143.353837</td>\n      <td>기업</td>\n      <td>110.468213</td>\n      <td>북한</td>\n      <td>153.504708</td>\n      <td>대통령</td>\n      <td>78.668422</td>\n      <td>대통령</td>\n      <td>55.984063</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>경제</td>\n      <td>109.593958</td>\n      <td>대통령</td>\n      <td>105.349634</td>\n      <td>기업</td>\n      <td>147.576313</td>\n      <td>기업</td>\n      <td>73.745679</td>\n      <td>경제</td>\n      <td>47.226472</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>규제</td>\n      <td>99.747167</td>\n      <td>경제</td>\n      <td>98.987800</td>\n      <td>경제</td>\n      <td>141.483724</td>\n      <td>경제</td>\n      <td>66.228374</td>\n      <td>국민</td>\n      <td>43.421289</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>한국</td>\n      <td>96.602629</td>\n      <td>북한</td>\n      <td>94.959321</td>\n      <td>대통령</td>\n      <td>136.803875</td>\n      <td>미국</td>\n      <td>60.756488</td>\n      <td>기업</td>\n      <td>43.096729</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>정책</td>\n      <td>95.039328</td>\n      <td>미국</td>\n      <td>93.682823</td>\n      <td>정책</td>\n      <td>125.951686</td>\n      <td>일자리</td>\n      <td>58.554333</td>\n      <td>정책</td>\n      <td>41.426563</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>미국</td>\n      <td>90.302124</td>\n      <td>중국</td>\n      <td>87.481722</td>\n      <td>미국</td>\n      <td>125.941853</td>\n      <td>한국</td>\n      <td>57.845017</td>\n      <td>검찰</td>\n      <td>36.136012</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>대통령</td>\n      <td>89.964928</td>\n      <td>한국</td>\n      <td>86.394644</td>\n      <td>일자리</td>\n      <td>108.601917</td>\n      <td>정책</td>\n      <td>53.730281</td>\n      <td>상황</td>\n      <td>35.747487</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>북한</td>\n      <td>86.210303</td>\n      <td>정책</td>\n      <td>76.064262</td>\n      <td>중국</td>\n      <td>104.657793</td>\n      <td>시장</td>\n      <td>51.787001</td>\n      <td>미국</td>\n      <td>34.320186</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>중국</td>\n      <td>83.305281</td>\n      <td>국민</td>\n      <td>73.182543</td>\n      <td>규제</td>\n      <td>100.005150</td>\n      <td>규제</td>\n      <td>45.949896</td>\n      <td>국회</td>\n      <td>33.419709</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>국민</td>\n      <td>79.407091</td>\n      <td>규제</td>\n      <td>68.673798</td>\n      <td>국민</td>\n      <td>97.847511</td>\n      <td>국회</td>\n      <td>43.571681</td>\n      <td>북한</td>\n      <td>32.206295</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>일자리</td>\n      <td>79.164376</td>\n      <td>국회</td>\n      <td>64.407326</td>\n      <td>임금</td>\n      <td>88.199132</td>\n      <td>중국</td>\n      <td>42.673492</td>\n      <td>장관</td>\n      <td>32.127931</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>시장</td>\n      <td>68.216227</td>\n      <td>시장</td>\n      <td>63.713174</td>\n      <td>한국</td>\n      <td>84.390802</td>\n      <td>일본</td>\n      <td>40.091627</td>\n      <td>한국</td>\n      <td>31.377541</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>노조</td>\n      <td>67.212984</td>\n      <td>투자</td>\n      <td>61.656313</td>\n      <td>국회</td>\n      <td>83.832130</td>\n      <td>성장</td>\n      <td>39.962075</td>\n      <td>일자리</td>\n      <td>30.921592</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>여당</td>\n      <td>64.899902</td>\n      <td>일자리</td>\n      <td>60.358299</td>\n      <td>투자</td>\n      <td>81.507045</td>\n      <td>임금</td>\n      <td>39.627805</td>\n      <td>성장</td>\n      <td>30.897654</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>투자</td>\n      <td>64.160446</td>\n      <td>임금</td>\n      <td>59.657628</td>\n      <td>시장</td>\n      <td>80.210144</td>\n      <td>북한</td>\n      <td>39.523417</td>\n      <td>임금</td>\n      <td>30.480363</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>임금</td>\n      <td>62.896762</td>\n      <td>일본</td>\n      <td>58.333997</td>\n      <td>성장</td>\n      <td>79.884542</td>\n      <td>국민</td>\n      <td>38.434493</td>\n      <td>대표</td>\n      <td>29.536249</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>산업</td>\n      <td>60.127337</td>\n      <td>성장</td>\n      <td>52.338215</td>\n      <td>장관</td>\n      <td>74.306424</td>\n      <td>부동산</td>\n      <td>35.483854</td>\n      <td>인상</td>\n      <td>28.477505</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>일본</td>\n      <td>58.510270</td>\n      <td>산업</td>\n      <td>52.099878</td>\n      <td>산업</td>\n      <td>73.267545</td>\n      <td>후보</td>\n      <td>34.080738</td>\n      <td>정도</td>\n      <td>28.369887</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>국회</td>\n      <td>58.063480</td>\n      <td>장관</td>\n      <td>51.585880</td>\n      <td>인상</td>\n      <td>73.013147</td>\n      <td>반도체</td>\n      <td>33.821207</td>\n      <td>정치</td>\n      <td>27.913461</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Dimension Reduction\n\n본격적인 군집 분석에 앞서, 데이터의 분포를 확인하고자 차원 축소를 진행하였다. \n\n차원 축소 진행을 위해 먼저 데이터 벡터화를 진행하였다.\n\n다만, 모든 데이터를 전부 넣을 경우, 컴퓨터가 연산량을 이기지 못하고 다운되는 경우가 재현되어,\n데이터는 2020년 이후의 데이터로만 분석을 진행하였다. \n\n전체 데이터에 대한 분석은 2편의 토픽 모델링에서 진행하였다.\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\ndef targeting(x):\n    if x == '한국경제':\n        return 0\n    elif x == '매일경제':\n        return 1\n    elif x == '서울경제':\n        return 2\n    elif x == '파이낸셜뉴스':\n        return 3\n    elif x == '헤럴드경제':\n        return 4\n    elif x == '아시아경제':\n        return 5\n    \ndf['target'] = df['언론사'].apply(lambda x : targeting(x))\n\ndf20 = df[df['일자'] >= 20200100]\ndf10 = df[df['일자'] < 20200100]\n\ntext20 = df20['키워드']\ntext20_df = df20[['언론사', '제목']]\n```\n:::\n\n\n가장 먼저 차원 축소 방법론인 PCA(Principle Component Analysis)를 사용하였다. \n해당 방법을 통해 데이터를 2차원으로 축소하였다.\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\nfrom sklearn.decomposition import PCA\nfrom sklearn.pipeline import Pipeline\n\npipeline = Pipeline([\n    ('vect', CountVectorizer()),\n    ('tfidf', TfidfTransformer()),\n])        \nvec = pipeline.fit_transform(text20).toarray()\n\npca_df = PCA(n_components=2).fit_transform(vec)\n\npca_df = pd.DataFrame(pca_df, columns = ['component 0', 'component 1'])\n```\n:::\n\n\n시각화 결과는 다음과 같다.\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\npca_df['target'] = df['target']\n\npca_0 = pca_df[pca_df['target'] == 0]\npca_1 = pca_df[pca_df['target'] == 1]\npca_2 = pca_df[pca_df['target'] == 2]\npca_3 = pca_df[pca_df['target'] == 3]\npca_4 = pca_df[pca_df['target'] == 4]\npca_5 = pca_df[pca_df['target'] == 5]\n\nplt.scatter(pca_0['component 0'], pca_0['component 1'], color = 'blue', label = '한국경제')\nplt.scatter(pca_1['component 0'], pca_1['component 1'], color = 'orange', label = '매일경제')\nplt.scatter(pca_2['component 0'], pca_2['component 1'], color = 'green', label = '서울경제')\nplt.scatter(pca_3['component 0'], pca_3['component 1'], color = 'yellow', label = '파이낸셜')\nplt.scatter(pca_4['component 0'], pca_4['component 1'], color = 'pink', label = '헤럴드')\nplt.scatter(pca_5['component 0'], pca_5['component 1'], color = 'purple', label = '아시아경제')\n\nplt.xlabel('component 0')\nplt.ylabel('component 1')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-19-output-1.png){width=823 height=807}\n:::\n:::\n\n\n추가로 흝어진 정도를 파악하기 위해 T-SNE 방법을 사용했다.\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\nfrom sklearn.manifold import TSNE\n\ntsne = TSNE(n_components=2, learning_rate=400).fit_transform(vec)\n\ntsne_df = pd.DataFrame(tsne, columns = ['component 0', 'component 1'])\n```\n:::\n\n\n시각화 결과는 다음과 같다.\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\ntsne_df['target'] = df['target']\n\ntsne_0 = tsne_df[tsne_df['target'] == 0]\ntsne_1 = tsne_df[tsne_df['target'] == 1]\ntsne_2 = tsne_df[tsne_df['target'] == 2]\ntsne_3 = tsne_df[tsne_df['target'] == 3]\ntsne_4 = tsne_df[tsne_df['target'] == 4]\ntsne_5 = tsne_df[tsne_df['target'] == 5]\n\n\nplt.scatter(tsne_0['component 0'], tsne_0['component 1'], color = 'blue', label = '한국경제')\nplt.scatter(tsne_1['component 0'], tsne_1['component 1'], color = 'orange', label = '매일경제')\nplt.scatter(tsne_2['component 0'], tsne_2['component 1'], color = 'green', label = '서울경제')\nplt.scatter(tsne_3['component 0'], tsne_3['component 1'], color = 'yellow', label = '파이낸셜')\nplt.scatter(tsne_4['component 0'], tsne_4['component 1'], color = 'pink', label = '헤럴드')\nplt.scatter(tsne_5['component 0'], tsne_5['component 1'], color = 'purple', label = '아시아경제')\n\nplt.xlabel('component 0')\nplt.ylabel('component 1')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-21-output-1.png){width=836 height=807}\n:::\n:::\n\n\n## K-Means Clustering\n\n본격적으로 군집 분석에 들어가기 앞서, K-Means는 최적 군집 갯수를 정해줘야 한다.\n\n최적 군집 갯수 추론을 위해 Elbow Method를 사용하였다.\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\nfrom sklearn.cluster import KMeans\nfrom yellowbrick.cluster import KElbowVisualizer\n\nvzr = KElbowVisualizer(KMeans(), k=(2, 20))\nvzr.fit(pca_df)\nvzr.poof()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-22-output-1.png){width=727 height=486}\n:::\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\n<Axes: title={'center': 'Distortion Score Elbow for KMeans Clustering'}, xlabel='k', ylabel='distortion score'>\n```\n:::\n:::\n\n\n분석 결과, 최적 토픽 갯수는 5개로 나타났다.\n\n해당 5개의 군집 분석 결과를 확인하기 위해 Silhouette Score 분석을 진행하였다.\n분석 최적화를 위해 정규화도 진행하였다.\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import Normalizer\n\nnor = Normalizer()\nvec_nor = nor.fit_transform(vec)\n```\n:::\n\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\nfrom yellowbrick.cluster import SilhouetteVisualizer\n\nkmeans= KMeans(n_clusters=5, max_iter=1000, random_state=0)\nvisualizer = SilhouetteVisualizer(kmeans, colors='yellowbrick')\n```\n:::\n\n\n::: {.cell execution_count=24}\n``` {.python .cell-code}\nvisualizer.fit(vec_nor)\nvisualizer.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-25-output-1.png){width=660 height=486}\n:::\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\n<Axes: title={'center': 'Silhouette Plot of KMeans Clustering for 8433 Samples in 5 Centers'}, xlabel='silhouette coefficient values', ylabel='cluster label'>\n```\n:::\n:::\n\n\n생각보다 실루엣 계수가 많이 낮게 나타났다.\n\n이러한 결과가 K-means 분석 모델의 결과가 안좋은 것인지, 텍스트 데이터 분석 방법론으로서 k-Means의 한계인 것인치는 확인이 필요해보인다.\n\nK-Means 군집 별 기사 갯수는 다음과 같다.\n\n::: {.cell execution_count=25}\n``` {.python .cell-code}\nkmeans.fit(vec_nor)\n\nlabels = kmeans.labels_\n\ntext20_df['군집'] = labels\n\ntext20_df.groupby('군집').size()\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\n군집\n0     514\n1    1784\n2    4638\n3     807\n4     690\ndtype: int64\n```\n:::\n:::\n\n\n또한 이후 개별적으로 분석해낸 토픽의 양상은 다음과 같다.\n\n0번 토픽 = 검찰 관련 칼럼\n\n1번 토픽 = 총선 관련 칼럼\n\n2번 토픽 = 경제 정책 관련 칼럼\n\n3번 토픽 = 부동산 관련 칼럼\n\n4번 토픽 = 북한 관련 칼럼\n\n해당 결과를 토대로 PCA와 T-SNE를 진행한 결과는 다음과 같다.\n\n### PCA with K-means\n\n\n\n::: {.cell execution_count=27}\n``` {.python .cell-code}\npca_df['cluster'] = labels\n\npca_clu_0 = pca_df[pca_df['cluster'] == 0]\npca_clu_1 = pca_df[pca_df['cluster'] == 1]\npca_clu_2 = pca_df[pca_df['cluster'] == 2]\npca_clu_3 = pca_df[pca_df['cluster'] == 3]\npca_clu_4 = pca_df[pca_df['cluster'] == 4]\n\nplt.scatter(pca_clu_0['component 0'], pca_clu_0['component 1'], color = 'blue', label = '부동산')\nplt.scatter(pca_clu_1['component 0'], pca_clu_1['component 1'], color = 'orange', label = '코로나')\nplt.scatter(pca_clu_2['component 0'], pca_clu_2['component 1'], color = 'green', label = '북한')\nplt.scatter(pca_clu_3['component 0'], pca_clu_3['component 1'], color = 'purple', label = '경제 정책')\nplt.scatter(pca_clu_4['component 0'], pca_clu_4['component 1'], color = 'red', label = '정치')\n\nplt.xlabel('component 0')\nplt.ylabel('component 1')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-28-output-1.png){width=815 height=801}\n:::\n:::\n\n\n### T-SNE with K-means\n\n::: {.cell execution_count=28}\n``` {.python .cell-code}\ntsne_df['cluster'] = labels\n\ntsne_clu0 = tsne_df[tsne_df['cluster'] == 0]\ntsne_clu1 = tsne_df[tsne_df['cluster'] == 1]\ntsne_clu2 = tsne_df[tsne_df['cluster'] == 2]\ntsne_clu3 = tsne_df[tsne_df['cluster'] == 3]\ntsne_clu4 = tsne_df[tsne_df['cluster'] == 4]\n\n# target 별 시각화\nplt.scatter(tsne_clu0['component 0'], tsne_clu0['component 1'], color = 'blue', label = '부동산')\nplt.scatter(tsne_clu1['component 0'], tsne_clu1['component 1'], color = 'orange', label = '코로나')\nplt.scatter(tsne_clu2['component 0'], tsne_clu2['component 1'], color = 'green', label = '북한')\nplt.scatter(tsne_clu3['component 0'], tsne_clu3['component 1'], color = 'purple', label = '경제 정책')\nplt.scatter(tsne_clu4['component 0'], tsne_clu4['component 1'], color = 'red', label = '정치')\n\nplt.xlabel('component 0')\nplt.ylabel('component 1')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](economic_columns_clustering_files/figure-html/cell-29-output-1.png){width=827 height=801}\n:::\n:::\n\n\n",
    "supporting": [
      "economic_columns_clustering_files\\figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}